% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corr-ind.R
\name{snp_corInd}
\alias{snp_corInd}
\alias{bed_corInd}
\title{Correlation matrix}
\usage{
snp_corInd(
  Gna,
  list_ind,
  ind.row = rows_along(Gna),
  ind.col = cols_along(Gna),
  ncores = 1
)

bed_corInd(
  obj.bed,
  list_ind,
  ind.row = rows_along(obj.bed),
  ind.col = cols_along(obj.bed),
  ncores = 1
)
}
\arguments{
\item{Gna}{A \link[=FBM.code256-class]{FBM.code256}
(typically \verb{<bigSNP>$genotypes}).\cr
You can have missing values in these data.}

\item{ind.row}{An optional vector of the row indices (individuals) that
are used. If not specified, all rows are used.\cr
\strong{Don't use negative indices.}}

\item{ind.col}{An optional vector of the column indices (SNPs) that are used.
If not specified, all columns are used.\cr
\strong{Don't use negative indices.}}

\item{ncores}{Number of cores used. Default doesn't use parallelism.
You may use \link{nb_cores}.}

\item{obj.bed}{Object of type \link{bed}, which is the mapping of some bed file.
Use \code{obj.bed <- bed(bedfile)} to get this object.}

\item{size}{For one SNP, window size around this SNP to compute correlations.
Default is \code{500}. If not providing \code{infos.pos} (\code{NULL}, the default), this is
a window in number of SNPs, otherwise it is a window in kb (genetic distance).}

\item{alpha}{Type-I error for testing correlations.
Default is \code{1} (no threshold is applied).}

\item{thr_r2}{Threshold to apply on squared correlations. Default is \code{0}.}

\item{fill.diag}{Whether to fill the diagonal with 1s (the default)
or to keep it as 0s.}
}
\value{
The (Pearson) correlation matrix. This is a sparse symmetric matrix.
}
\description{
TODO: CHANGE DESC AND DOCU.
Get significant (Pearson) correlations between nearby SNPs of the same chromosome
(p-values are computed using a two-sided t-test).
}
\examples{
test <- snp_attachExtdata()
G <- test$genotypes

keep <- Matrix::rsparsematrix(100, 100, 0.05, symmetric = TRUE) != 0
ind <- Matrix::which(keep, arr.ind = TRUE)
list_ind <- split(ind[, 1], factor(1:100)[ind[, 2]])

corr <- snp_corInd(G, ind.col = 1:100, list_ind = list_ind)
ind2 <- Matrix::which(corr != 0, arr.ind = TRUE)
all.equal(ind, ind2)

}
