% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc-sumstats.R
\name{snp_qc_sumstats}
\alias{snp_qc_sumstats}
\title{Quality control of summary statistics}
\usage{
snp_qc_sumstats(
  corr,
  z_sumstats,
  thr_highld = 0.05,
  min_nb_highld = 20,
  prop_eigs = 0.4,
  max_run = 0.1 * length(z_sumstats),
  pval_thr = 5e-08,
  print_iter = FALSE,
  ncores = 1
)
}
\arguments{
\item{corr}{Sparse correlation matrix as an \link[=SFBM-class]{SFBM}.
If \code{corr} is a dsCMatrix or a dgCMatrix, you can use \code{as_SFBM(corr)}.}

\item{z_sumstats}{Initial z-scores from GWAS summary statistics.}

\item{thr_highld}{Threshold on squared correlations to decide which variants
to use for imputation. Default is \code{0.05}.}

\item{min_nb_highld}{Minimum number of variants to use for imputation.
In case not enough variants pass \code{thr_highld}, the most correlated are used.
Default is \code{20}.}

\item{prop_eigs}{The proportion of eigen components to keep.}

\item{max_run}{Maximum number of iterations (and therefore the maximum number
of variants that can be removed). Default is 10\% of all variants.}

\item{pval_thr}{P-value threshold for QCing. Default is \code{5e-8}.}

\item{print_iter}{Whether to print the iteration numbers. Default is \code{FALSE}.}

\item{ncores}{Number of cores used. Default doesn't use parallelism.
You may use \link{nb_cores}.}
}
\value{
A tibble (data frame) with 6 variables for each variants:
\itemize{
\item \verb{$z_ss}: the initial vector of \code{z_sumstats},
\item \verb{$z_ss_imp}: the imputed z-scores,
\item \verb{$deno_qc}: the denominators of the chi-squared statistics for QCing,
\item \verb{$chi2_qc}: the chi-squared statistics,
\item \verb{$pval_qc}: the corresponding p-values,
\item \verb{$rm_qc}: whether the p-values are significant or not.
}
}
\description{
Quality control of summary statistics, by comparing z-scores with z-scores
imputed using nearby correlated variants.
}
\examples{
bigsnp <- snp_attachExtdata()
G <- bigsnp$genotypes
Z <- big_univLogReg(G, bigsnp$fam$affection - 1, ind.col = 1:500)$score
ind <- which.max(abs(Z)); Z[ind] <- -Z[ind]
ld <- snp_cor(G, ind.col = 1:500)
corr <- as_SFBM(ld, compact = TRUE)

res <- snp_qc_sumstats(corr, Z)

res$pval_qc[ind]
summary(res$pval_qc[-ind])

}
